name: Python application

on:
  push:
    branches: [ "main" ]

  pull_request:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        pants-version: ["2.23.0", "2.24.0"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9 and 3.11
      uses: actions/setup-python@v5
      with:
        python-version: |
          3.9
          3.11

    - name: Tell Pants to use Python 3.11
      run: |
        echo "PANTS_VERSION=${{ matrix.pants-version }}" >> $GITHUB_ENV

    - name: Initialize Pants
      uses: pantsbuild/actions/init-pants@main
      with:
        # cache0 makes it easy to bust the cache if needed
        gha-cache-key: cache1-test-py3.11-pants${{ matrix.pants-version }}
        named-caches-hash: ${{ hashFiles('pants-plugins/*.lock') }}

    - name: Test everything
      run: |
        ./get-pants.sh
        sudo sh -c 'echo "runner:100000:65536" > /etc/subuid'
        sudo sh -c 'echo "runner:100000:65536" > /etc/subgid'
        /home/runner/bin/pants test ::

  package:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        pants-version: ["2.23.0", "2.24.0"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9 and 3.11
      uses: actions/setup-python@v5
      with:
        python-version: |
          3.9
          3.11

    - name: Tell Pants to use Python 3.11
      run: |
        echo "PANTS_VERSION=${{ matrix.pants-version }}" >> $GITHUB_ENV

    - name: Initialize Pants
      uses: pantsbuild/actions/init-pants@main
      with:
        # cache0 makes it easy to bust the cache if needed
        gha-cache-key: cache1-package-py3.11-pants${{ matrix.pants-version }}
        named-caches-hash: ${{ hashFiles('pants-plugins/*.lock') }}

    - name: Package all targets
      run: |
        ./get-pants.sh
        id
        id -u
        id -g
        sudo sh -c 'echo "runner:100000:65536" > /etc/subuid'
        sudo sh -c 'echo "runner:100000:65536" > /etc/subgid'
        docker run --rm --cap-drop all --cap-add CAP_SETGID ubuntu:24.04 cat /proc/self/gid_map
        docker run --rm --cap-drop all --cap-add CAP_SETUID ubuntu:24.04 cat /proc/self/uid_map

        /home/runner/bin/pants package ::

  package-examples:

    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-13"]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9 and 3.11
      uses: actions/setup-python@v5
      with:
        python-version: |
          3.9
          3.11

    - name: Initialize Pants
      uses: pantsbuild/actions/init-pants@main
      with:
        # cache0 makes it easy to bust the cache if needed
        gha-cache-key: cache1-package-py3.11-pants2.19.0
        named-caches-hash: ${{ hashFiles('pants-plugins/*.lock') }}

    - name: Package all targets
      run: |
        ./get-pants.sh
        id
        id -u
        id -g
        sudo sh -c 'echo "runner:100000:65536" > /etc/subuid'
        sudo sh -c 'echo "runner:100000:65536" > /etc/subgid'
        docker run --rm --cap-drop all --cap-add CAP_SETGID ubuntu:24.04 cat /proc/self/gid_map || true
        docker run --rm --cap-drop all --cap-add CAP_SETUID ubuntu:24.04 cat /proc/self/uid_map || true

        pants --umoci-version=nightly --filter-address-regex='^((?!multistage).)*$' package examples::

  check-and-lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9 and 3.11
      uses: actions/setup-python@v5
      with:
        python-version: |
          3.9
          3.11

    - name: Run linters on all targets
      run: |
        ./get-pants.sh
        /home/runner/bin/pants update-build-files --check lint ::

  validate-tailor:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9 and 3.11
      uses: actions/setup-python@v5
      with:
        python-version: |
          3.9
          3.11

    - name: Validate that tailor files are up to date
      run: |
        ./get-pants.sh
        /home/runner/bin/pants tailor --check ::
